weaves

* Data processed by weaves

This uses a make build and a special script: hcc_.sh
hcc_.sh uses a link to a interface script called m_

** Data coverage dcover0

The goal is all-local doesn't use samples1

Produces some analytic reports on data coverage, reference tables and indices.

Produces a workspace with date ranges for later processes.

** The samples

Goal is all

** Reporting tables0

Uses samples1 produces analytics report especially xncas1

Goal install-local

Not dependent on samples1 so can pre-check and post-check

** Raw tables as CSV : 2csv

Goal is install

There's listing at the end.

I've checked the key work, if so it is aid, else aid0 or aid00
And I've simplified the column names.

For predictive models, it's best not to use percentages. The models
work in probability so they will do the proportions.

x is for export.

*** dcover0 dcover1 - data coverage by month

dcover0 is very detailed. n is the number of records, nassets is the
distinct feature-id/asset-id/usrn

dcover1 is a summary, which datasets on which months.

Our current coverage is 2013.01 to 2017.10.

rci and traffic appear intermittently.

*** Reference data - some source categories have been re-classed

**** Enquiries

pr0t and pr2t describe Enquiry priority and response within samples. The source
category is translated to priority and response with count within the samples
dataset. This has imputed data in it.

**** Carriageways

roadtype seems to be a lanes classification lanes2 is dual

roadtypehw0 source code road type is mapped to a set of booleans isslip
isround lanes isoneway

rh0 or source name roadhierarchy.  This may be the source classification
used to decide for Enquiries priority.

width0 is classifications by width of road, this might be what decides the
model traffic.




*** Other Reports

ncas1 is a summary table (makes a good chart) of the key
metrics. action inspct claims repudiations enquiries enquiries-repairs
also show change in policy over superseded and unsuperseded dfcts.

The is the main data source for the e2c Enquiries to Claims model.

dfctstatus is a simple summary table of dfct by type

xdfctsample0 is a summary of the forward and backwards works as seen
in samples

xdfctsample1 is a summary of forward and backwards works by month -
all metrics.

*** cwy0 is carriageway inventory

It is derived from cwy (the inventory) with additional
metrics. featureid is the key and is used by other tables.

These are boolean or numeric values from the roadtype roadtypehw and
so on.

isdist pri iscls pri2 isslip isshared isdual issingle isoneway isround
lanes lanes2 rh0

I've also calculated the same for the root asset of the feature. with
the prefix a0X

It has speed limits (many imputed and rounded) and model traffic flow
- expected Average Annual Daily flow. This is a very noisy value, so
they have been rounded to 

 50 (0 800), 100 [800, 2000), 500 [2000 10000)
 1000 [10000 20000), 2000 [20000 40000) 5000 [40000 inf]

*** fwy0 is footway inventory

No extra processing on this.

*** ftre Asset and Feature-ID lookups for both FWY and CWY

This is a lookup table to check assets, it covers the full FWY asset,
ie. /LU /LH and maintains the root asset A10/50 has the root A10.

I use it for key checking.

*** enq1 is enquiries

The raw file with a foreign key to cwy0 with some additional metrics
decoded.

Uses cph_weaves to encode priority and response time.

*** fwyenq0 is footway faults

This is a raw file. It valid up to July 2016, it has some records that
overlap with enq1.

*** dfct1 is defects

This is an event table, so it has to key uniquely on asset/featureid
and datetime. This took some doing - about 600 records have duplicate
timestamps. I added a fraction of a second to the one with the higher
defect number.

And I didn't even have to use it!

I really shortened the attribute names. I only put in a foreign key to
cwy0. I derived metrics from the classification in defecttypename -
aka type0name. The classifications are in cph_weaves.csv.  ntype1 is
cwy or fwy. ntype2 is a priority (A B C and T -> 1 2 3 4), ntype3 is
type of defect (pothole, crack, etc.) resp0 is a response
time. status0 is repaired or otherwise, superceded is a boolean if the
defect has been superceded.

I haven't deleted the superceded records. They are an indication of
activity - a defect is being inspected, etc.

I've searched through the supersedes chain to add a field dfct00. This
is the first dfct in the chain.

I had hoped that I could find the inspection time from dfct, but most
records are singletons. (The first record would be like enquiry,
logging the fault, the next would be the inspection.)

I set fields inspct0 and action1 to state whether an inspct0 and an
action1 have been made. Now, the only way one can determine if an
inspection or action has been taken is to look-forward in dfct1 from
an enquiry record.

*** clm1 is claims

with some added stuff

*** fci is footway condition index

Raw file, unprocessed.

*** traffic tables: traffic0, traffic1 and traffic2

traffic0 is the ABC_Volumes data
traffic1 is a keyed version of traffic0 and
traffic2 is keyed to traffic1

*** permits: permit1 and permit2 also prmtrisk

This is the list of all the permits granted for road closures. It keys
on workheader and seqno. For some reason seqno takes negative values.

permits is the source file (all 5 Stopped Works files combined.)
permit1 has column deletions and renames, some metric and
classifictions. xtype0 states whether a usrn does not map to anything
in the carriageways table (cwy0).

12.7k distinct USRN and 1.7k cannot be mapped.

ptype0 is the promoter type with a ranking of ptype1 for
importance/reliability.

It is HA (National Highways Authority) and LHA (Hertfordshire),
Traffic (London Underground and Network Rail) and third parties -
everyone else.

wcat1 is the severity of the work. This is the distribution summary.

ptype0    wcat1 x     
----------------------
3pty      1     55427 
3pty      2     3762  
3pty      3     86470 
3pty      4     10978 
HA        1     100351
HA        2     8026  
HA        3     20632 
HA        4     8474  
Transport 1     36    
Transport 2     252   
Transport 3     306   
Transport 4     61

I've further simplified this to just HA and 3pty.
I've reversed the priority of wcat1

This produces another file xprmtrisk.csv

This is the permit activity for each month of the data.

siteid,dt0,ptype0,prmt1m,prmtwcat1m,prmtddt1m,prmtrisk1m

ptype0 is whether Highways Authority HA or Third Party 3pty
dt0 is the end of the month

prmt1m is the count of permits in that month

prmtwcat1m is the category of the work:
 Immediate Major Minor Standard are 4 3 2 1

prmtddt1m is the number of days the permits were in force for that
month.

prmtrisk1m is a risk metric, wcat * days/total-days

Do note, some of the projects are very long running. These ones last
one day longer than the month.

*** clmprmt0 and clmprmt1

These are tables of the closest permitted work to a claim. Keyed by
siteid.

clmprmt0 is the permit that may have been the response to a claim. The
permit data is the month of the claim. That date dtprmt is after the
lossdate dtloss.

clmprmt1 is the permit that may have been the cause of a claim. The
dtprmt is before the dtloss.

clmprmt1 is a useful table in itself. It could tell the Claims people
when there was work last carried out near that USRN.

*** salting tables

salting1 is a keyed version of salting (not included) with irrelevant
records removed salting2 is keyed to salting1

*** weather1

This is monthly weather with an HCC claims-season attribute (derived
from all claims), see below.

There are a lot of missing values. In samples1, I've imputed using
monthly averages. Not ideal.

*** lsoa1

Is the asset-id/feature-id mapping to the LSOA. Coverage is good. Use
the feature-id rather than the asset-id. Many assets appear as both
cwy and fwy, so use lsoa0 as a type field.

*** lsoa2ward

This is a mapping of LSOA to their ward (some cross boundaries.)

*** imd1

This is a simpler version of the IMD file sent by Adam - IMD, rank and
wealth ranking in Herts only. (IMD is -ve correlated to rank and is
+ve correlated to wealth ranking - both to 0.95%.) It also maps to ward.

*** imd2ward

This is for imputation. Averages of the LSOA within a ward.

*** pop tables: population by LSOA

It's flattened: columns prefixed t are the total, for those prefixed m
- male - and with f - female. The fields suffixed 00 are the count
totals. The other fields are counts for the classes.

   Do note the cut-off ages age0 age1 age2 age3 age4 are different for
   male and female.

   men: cut-offs: 15, 24, 49, 64, 65+
   women: cut-offs: 15, 24, 49, 59, 60+

pop1w is the same as pop1 but by ward, for imputation, some of the
ward totals look too big. It may be there's a mistake, so use with
caution.

*** cars 

cars1 and cars1w rrepresent number of cars (ncars) for each household
(nhhs). The others are ncars0 ... ncars4 is 0 ... four cars (or more)
of the the total number of households ncars00. The total cars in an
LSOA (and ward) has been added as tcars0 with a w suffix for the ward.

*** rci1

This is the road condition index. It is only valid for 2016.09 onwards
(there are few records from other years.) And there are observations
of the same road in different years.

It has three keys: featureid, lane, obsnumber. The red/green/amber
condition field is now called desc1.

*** rci12rag

This is a set of red-amber-green counts and their total. Left lanes
are prefixed with "l", right with "r".

Only 1388 roads have red-amber-green for the right lanes. 1893 for the
left. About 10% of the total number of roads: 19509.

I had to be generous to use this data and tagged it all as 2017
(actually 2016.09 is the largest month, so it should only be used for
2017 data.)

   mm      x     
   --------------
   2016.01 1321  
   2016.02 2972  
   2016.03 512   
   2016.09 121767
   2016.10 97679

*** samples1

This is a set of samples to present to a predictive model. It is an
enquiries table with foreign keys to retrieve other features when
needed (road type, material .etc). This is the whole of the
carriageway enquiries table, which is all potholes in this new release
of the data from HCC. I haven't filtered the enquiries down yet to
remove bad records - that's "Not found" and others.

Notice the src0 and isclm0 fields they will be set differently for the
claims records when they are added.

(I've sorted this so that the rci1rag1 columns are at the top. They're
very sparse otherwise - only 2016.)

There are far too many null attributes. Imputing them is often the
hardest part of using machine learning methods, which are very
sensitive to null values. Most of the missing ones are from the LSOA
so I'll be using the ward metrics as a proxy if that works.

The very specific fields are deleted before the samples are used. So
enq0, lsoa, cwy, the date fields (date0, ddate0, ddate1, month0, yyyy,
etc., are removed.) Without those, it has to use the more generic
features to match enquiries to the real claims.

There are a lot more to add - importantly the PoI features and the
traffic.

These samples are very repetitive. The same information used over and
over. This helps the predictive model to find the similarities. It
needs a time-decaying "investment" metric for the road.

**** Variants

There are a number of variants that are *not* packaged. You could
create them for yourself.

  samples2 - long roads - distance >= 502

  samples3 - short roads - distance < 502

  samples4 - rural - not isurban

  samples5 - urban - isurban

  samples6 - 1000 records only from urban and long - isurban and
  distance >= 502


**** Dates available

For the four key datasets: claims, enquiries, defects and permits.

2013.01 - 2017.10

LSOA is probably from 2011, the Census - and population could be
scaled up by percentages. Not so easy with cars and IMD.

**** PoI features

These are loaded in from the poi workspace as tables0. They are then
appended as columns to samples. These are now exponentially weighted
and should be fairly good indicators of the underlying topology of the
assets.

**** Forward and Backward Works

Defects works are by asset-id. Permits are by site-id but scaled by
the number of assets in that site-id. Only the count and the number of
days is scaled.

 br0[["bworks"]]
 [1] "statusb30"     "dfctb30"       "dfctrfrb30"    "dfctinspctb30"
 [5] "dfctactionb30" "dfctcatb30"    "dfctriskb30"   "prmtTb30"     
 [9] "prmtb30"       "prmtwcatb30"   "prmtddtb30"    "prmtriskb30"  
[13] "statusb90"     "dfctb90"       "dfctrfrb90"    "dfctinspctb90"
[17] "dfctactionb90" "dfctcatb90"    "dfctriskb90"   "prmtTb90"     
[21] "prmtb90"       "prmtwcatb90"   "prmtddtb90"    "prmtriskb90"  

These and their forward equivalents have a new aggregation. 30 is the
first thirty days only and is CAT1. 90 is 30 to 90 days (that is, does
not include the first 30 days) and is CAT2.

***** Defects 

dfctb30 or f30 - is the count of defects logged in the past/following
30 days. Effectively this is CAT1 

dfctb90 or f90 - is the count defects in the period 30 to 90
days. CAT2.

statusb30 or f30 - is a new clustered metric based on mapping status1
to a number: the Dewey trick. They can be spaced wider apart, but this
number with the count (dfctb30) are indicative together.

    status1  status2

    nothing  1      
    noaction 10     
    permit   100    
    action   1000   

rfr is the now defunct Defect logging method (2015 to 2016)

inspct is the count of inspections that took place - using inspct0

action is the count of actions that took place - using action1

There is an average works category and an average risk.

***** Permits

These are by site-id

prmtTb30 is the clustered sum of what kind of permit.

    status1 status2
    3pty    10     
    HA      1000  

prmtb30 is the count and is scaled after it is used for the clustered
sum.

prmtwcatb30 prmtddtb30 prmtriskb30 - these are averages of works
category, the sum of the number of days, the average of prmtrisk.

The sum of days is scaled.

***** Samples

smpl

Introduce another set of histories. This is the number of times an asset is
mentioned within the sample set.

***** Site Samples

ssmpl by site-id

Introduce another set of histories. This is the number of times a site-id 
mentioned within the sample set.


*** Imputation

**** LSOA features

The LSOA to ward mapping is complete. 

The cars fields for LSOAs that have no cars records have been taken
from the cars wards table and divided down by the number of known
LSOAs in that ward and then joined in.

The imd fields that are missing have been averaged across the ward and
joined in.

The population statistics have again been taken from the ward and
divided down.

About 600 records have a null LSOA (and no ward mapping). These can be
removed because they have a null LSOA. So I've left them in. And I'll
delete on the predictor side.

null LSOA is the field.

**** Red-amber-green

It seems that only the right lanes are missing when there are
readings. The left lane details have been copied over.

Nothing can be done about records before the Road Condition Index
system was fully deployed before 2016.09. There are about 90k of them.

Again I'll leave them in and delete as necessary.

null ln is the field

**** weather

I had to impute a lot of values. Strangely. Probably a lack of data in
recent months.

**** Defect and Permit Histories

I've looked back- and for- wards for time periods. The periods have been
changed, see the file dcover files for details. Either 30 and 90 days or 30 days and 2 years.

The windows are exclusive, 30 

I had to do a lot of imputing here. There are three sets of features:

Defects: status (action/noaction), count, refers, inspects, actions, average category, risk metric 

 statusb30 dfctb30 dfctrfr0 dfctinspct0 dfctaction1 dfctcatb30 dfctriskb30

Permits: HA and 3rd party: count, average category, days, risk metric

 prmtHAb30 prmtHAwcatb30 prmtHAddtb30 prmtHAriskb30

 prmtP3b30 prmtP3wcatb30 prmtP3ddtb30 prmtP3riskb30

The windows 30 and 90 are not overlapping. They should not be called
30 and 90, but rather CAT1 and CAT2

30 means between 0 and 30 days of the input date.

90 means between 30 and 90 of the input date.

See .hcc.prmtrisk1 and .hcc.dfctrisk1 and the parameter ddt.

** Usage 

I have these tables keyed and they can very easily do pivots by
multiple keys

I have the feature to do time-windows (for each asset), (eg. defects
in last 30 days), adjacency joins, (what the last defect prior to this
data, for each asset)

And moving averages and variances, fill-forwards, fill-back .etc.

* Indices

** ftre Carriage- and footway- asset id

This is a lookup table of known carriage and footway ids.  It has an
extra type field and an aid00 field that is the root asset. So A1000
is the root of all A1000/10 A1000/20 and so on

The segment identifier can be used to locate the closest asset to an
asset that doesn't have a listed asset id because its segment isn't
listed.

So there may be a claim for 8U889/40 but there are only 10,20,30 for
that asset.

For footways, I have made a mistake. Preet Singh at HCC told me not to
bother using the /LU and /LR suffixes. Unfortunately, I did.  Because
of that you may have to use the index twice, one to get a root and
again to get the root of that. By those means, you can then find out
what road the footway is on.

The carriageway of a footway is available from the featureidalias. The
/LU and /LR suffixes are added to that. I've followed this logic in
the ftre file.

I got confused myself with this. A footway has aid (the /LU /LR
suffixes), then the aid0 is featureidalias (the
/10,20,30,.. suffixes), and the aid00 is the base of that, remove the
suffix altogether.

There's a new asset-id as well. In the footway file that is
centralassetid.

* Footways

** fwy0

Footway inventory with cross-ref to ftre (see above and later)

** fwyenq0

Is footway enquiries (originally Footway faults - from July 2016, ie. no refresh.)
The later enquiries may be in the newer CWY-enquiries file.

** Copy of FNS_Footway 

Is the original footway condition metric.

** fci

Is the condition data reloaded

* Carriageways

* rci1.csv Road Condition Data

This is processed Road Conditions_A, B, C

I've added an acode field that is a lookup of the featureid into a
carriageway catalogue.

* Miscellaneous

** weather 

The weather is from the Met Office. Monthly for Cambridge, temperature
high and low.

https://www.metoffice.gov.uk/pub/data/weather/uk/climate/stationdata/cambridgedata.txt

The closest to Hertfordshire. The sunshine data is incomplete (but
could be averaged and filled forward.) The "af" is a mysterious
field. I can't find a definition.

** ssns

ssns Seasons

This is a re-classification of the months by business of the
claims. December through to April are the 5 winter months and most
claims were observed.

I checked a couple of years separately, but against the global claims
volume. It might be useful to check the classification is still valid
for pothole and paving claims separately.

* Recursive Partitioning

** rpart.zip

This is included in the archive, but is a separate zip-file

These are Recursive Partition Tree plots. They try to capture the
classification that isolates Claims. They are the first step to a full
predictive model and give me an indication that there is structure to
the datasets.

I've chosen to use a "mis-classification" metric. Each node of the RPT
states what it is classifying for. Usually, this is "noclaim". Meaning it
can find the most convincing combination of metrics to determine what
samples would be not be a claim.

This is the case here, because we have so many more non-claim than
claim records. Nearly 20 times more enquiry records than claims.

The two numbers underneath the box are the mis-classification
rate. For a noclaim node, they are number-of-claims /
number-of-records.

For a claim node, (almost invariably a leaf of the tree), we should
read this as number-of-nonclaims / number-of-records.

What the classification algorithm is trying to do is find some
definitive leaves where we have 0/number-of-records. It has then found
a set of classifications that will classify a set of records as claim
or noclaim.

If it gets quite close, that is a good sign. Leaves - nodes with no
further sub-division - are bad if they leave a large number of claims.

Recursive Partition Trees are used within the principal predictive
models: Random Forest and Gradient Boosted Methods. These RPTs are me
performing Random Forest by hand. If I can see well-differentiated
trees, then reassures me that the features in the samples should
combine to give me a good predictive model.

*** Interpreting - xroadsc-cwy0-003.jpeg

Looking at xroadsc-cwy0-003.jpeg as an example. ("xroadsc" means
excluding-roads-columns. The "roads" columns are the Road
Condition Index columns.) The cwy0 is the full set of features from
the carriageway table.

**** Root Node - claims/total-records

The root node tells it will classify for noclaim events. There are
76452 records in all and 4554 of them are mis-classified as claims.

**** Left branch - a leaf - 1123 claims when distance of asset is < 502

Branching to the left, we see that for roads less than 502 metres in
length, we have 1123 claims of 34064 records. The node should classify
further as noclaim records, but there is no further information to
classify these. This branch ends here.

That means we need to add more features to do any differentiation
between the records on this branch.

**** Right branch - 3431 claims when distance >= 502

On the right, roads must be longer than 502 m. We then come to a
branch on isurban.

***** Right-Left - 1025 claims when distance >= 502 on urban roads

isurban has been coded as a boolean variable and can only take the
values 0 and 1. So >= 0.5 means it is an urban road and < 0.5 a rural
one.

***** Right-Right - 2406 claims when distance >= 502 and rural roads

****** Right-Right-Left - 2372 claims when distance >= 502, rural
       roads and not a roundabout

And no more classification can be done.

****** Right-Right-Right - 34 claims at roundabouts

This is a small part of the total records only 105. One can follow the
branch down and discover a "claim" node.

Here 5 records are mis-classified as claims.

**** Summary

The noclaim/claim node can be confusing. It just tells you
that the majority of the records are either noclaim or claim.

The point to note is that the numbers at the leaves are still very
large.

 - There are still 1123 claims to classify on short roads from over 34
   thousand records.

 - Another 1025 long urban road claims to classify within 18 thousand
   records.

 - Another 2372 long rural road claims to classify within 23 thousand
   records that are not roundabouts.

After that, there are only 105 records left and only 10 of them (5/15
at the claim node) can be identified as claims.

This is quite a specific road section. A rural road with a roundabout
that is somewhere between 502 and 714 metres in length.

*** Interpreting - xroadsc-cwy2-fworks-003.jpeg

This is a more complicated example. I've added the forward works
features.

These features are analyses of the defects and permits tables. For each sample,
I've looked ahead 30 and 90 days in the defects and permits tables to
see if anyone has responded to the enquiry/claim sample 30 days on.

We would hope that if there has been a response then the chance of a
claim will be reduced.

I've also used a shorter set of carriageway features. cwy2 does not
include distance, area or width. This will force the classification
algorithm to try harder with different features to classify.

The root node is the same.

**** Left branch - a leaf - urban roads - 1665 claims of 42k

1665 of 42 thousand records (over 50% of the total) are on urban roads
and can't be classified further using any of the other features.

**** Right branch - rural roads - 2889 claims of 33k

This then splits on the speed limit. 877 claims are on slower roads
(30 or 40 mph). We'll ignore that branch for now and follow the
remaining 2012 are on roads at or over 40 mph.

Of those faster roads, 1929 are on roads with a lower model traffic
less than 23k AADT.

Of those, 1921 are on roads that did not receive 4 inspections in the
forthcoming 30 days. This means they only received an inspection,
(rather than any action - another defect feature).

Only twelve records received more than 4.5 inspections and 8 of those
resulted in claims.

**** Other branches - 877 at under 35 mph, 83 on roads with model
     traffic above 23k AADT

These claims are relatively small and can be classified more accurately.

dfctriskf30 is a risk classification derived from how far the defect
progressed in the system and its response time in days (1, 7, 14 and
84).

dfctrfr is the count of the number of "Report" events in the defect
table for that asset.

dfct is the count of all the defects in the 30 days period (Report,
Closed, Completed, Cancelled etc.)

The prmtHAwcat feature is the average priority given to permit work in
the coming 30 days.

**** xroadsc-cwy2-fworks-weather

This adds the weather features. The largest leaves are now reduced in
size. The tree is more complex.

sun >= 91 means the summer and autumn seasons. The average sunshine in
winter is less than 85 hours.

In winter, there is a large leaf at 1637 where the number of
inspections is below 3.5.

In summer, the dfctactionf90 is the 90 day look-forward. There are
some faster roads, 50 mph, that have not been inspected enough.

On the slower roads, < 45, the ones that have received no-action,
nothing or were classified to be permit work in defects form 421
claims.

But, generally, introducing the weather has really helped to classify
the claims. All the leaves have smaller claims counts.

**** xroadsc-cwy2-lsoa-poi

This adds six point-of-interest features. (Only buses and hospitals
appear here.) And some demographic data. Only the total cars tcars00
and the total population are used.

The point-of-interest metric is calculated using a weighted average
and only includes points within a circle having the diameter of the
road.

The bus split has the largest leaf. Rural roads, with light bus
traffic have 2013 claims.

Although ncars00 is a small leaf, it faster rural roads with buses in
areas with low car ownership by household. Possibly distant suburbs.

tage00 is has more cars, but only a middling population suggesting
closer suburbs.

And finally there are some claims that were quite close to a hospital
on rural roads.

**** xroadsc-cwy2-poi-weather

This is very detailed. There is no forward works data, nor LSOA.

Importantly, it shows that PoI data can help with classifying the
urban roads at risk. But there is a large leaf for busier urban roads
with 1262 claims.

nhotels includes pubs as well. nsupermkt is supermarket chains.

af0 is a weather metric - I still haven't found out what it is.

pri is the carriageway hierarchy metric. MN Main distributor is 7, PR
Primary 6, SD Secondary 5, (PRoW is 4), L1 Local Distributor 3, Local
Access 2.

This is a very good tree. It only has one leaf and tells that PoI and
weather really help with classification.

*** Classes

Just some more about classes.

**** cwy0

This is most of the fields from the carriageway assets files.

 spdlimit, mtraffic - are the speed limit and model traffic.

 lanes2 is the number of lanes from the roadtype. D1..3 S1..3

**** cwy2

Is the same as cwy0, but without the distance, width and
area. (Removing them all allows other features to appear.)

pri2 is the roadclass, iscls means it is a classified road. 2 is
unclassified, 3 is C, 4 is B, 5 is A. So quiet unclassified roads are
the main contributors.

rh0 is the road hierarchy. The higher the number, the more major the
road. rh0 of 6 is C roads and below.

**** cwy3

Is cwy2 without the model traffic. 

**** bworks

Is the histories of permits and defects. b30 is back 30 days. Looking
back 30 days. It should indicate failed repairs and permits.

**** poi

Is the Points-of-Interest. This makes an appearance, nbus is important
and nhotel - pubs and hotels - on faster roads.

**** weather

This makes an appearance in the form of sun, rain, tmax and tmin. The
sun in wintry seasons is on average 85.

* Zip contents

** This file's Emacs file variables

[  Local Variables: ]
[  mode:text ]
[  mode:outline-minor ]
[  mode:auto-fill ]
[  fill-column: 75 ]
[  coding: iso-8859-1-unix ]
[  comment-column:50 ]
[  comment-start: "[  "  ]
[  comment-end:"]" ]
[  End: ]
